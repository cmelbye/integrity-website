* This list will contain the toc (it doesn't matter what you write here)
{:toc}

What's this? {#about}
============

Integrity is the angel watching over your shoulder while you code. As soon
as you push your commits, it builds, runs your tests, and makes sure
everything runs fine.

It then reports the build status using [various notifiers][notifiers]
back to your team so everyone's on the same page, and if there's a problem,
you can get it fixed right away.

Read more about [Continuous Integration][ci] on Wikipedia.

Live demo {#demo}
=========

See how integrity works for yourself on [our own install][demo], watching
Integrity itself and the [various notifiers][notifiers].

Setup {#setup}
=====

__It's ridiculously easy.__ All you need is to have `ruby` and `rubygems`
installed on your server, and then run do this:

    $ gem sources -a http://gems.github.com
    $ sudo gem install foca-integrity
    $ integrity install /path/to/my/integrity/install

This will create a couple files on your server, mainly `config.yml`,
`config.ru` and `thin.yml`.

After [editing those config files][configure] to your needs, just do this:

    $ sudo gem install thin
    $ thin -C /path/to/my/integrity/install/thin.yml \
        -R /path/to/my/integrity/install/config.ru start

Finally, point your web server (nginx, apache, or whatever you like) to proxy
requests made to your Integrity domain to the previous configuration.

After reloading your webserver's config, you should be gold. Just browse to
your new Integrity install and add your first project!

Read more about [configuring Integrity][configure].

Configuring Integrity {#configure}
=====================

Fortunately it's simple to configure. You only need to touch one file:

    /path/to/integrity/config.yml

Even better: the sample file generated by `integrity install` explains all the
possible options. In case you want to see them anyway,
[you can see the source file on GitHub][configsrc]


Configurting the Notifiers {#notifiers}
==========================

As explained on [the notifiers page][notifiers] all you need to do to get them
working after installing them is require them in the `config.ru` file generated
by `integrity install`.

Once required there, you need to restart the app, and each notifier can be
configured on a per-project basis by browsing to the project and clicking on
the *edit* link

Deployment Options {#deployment}
==================

Our preferred environment for running integrity is [Thin][] + [nginx][]

To this end, integrity ships a `thin.yml` ready to be used. After doing
`integrity install /a/b/c` you should run:

    $ thin -C /a/b/c/thin.yml -R /a/b/c/config.ru start   # to start it
    $ thin -C /a/b/c/thin.yml -R /a/b/c/config.ru restart # to restart it
    $ thin -C /a/b/c/thin.yml -R /a/b/c/config.ru stop    # to stop it

To proxy the web calls to thin we use nginx, with the following configuration:

    upstream builder-integrityapp-com {
      server 127.0.0.1:8910;
      server 127.0.0.1:8911;
    }

    server {
      server_name builder.integrityapp.com;
      location / {
        proxy_pass http://builder-integrityapp-com;
      }
    }

Sample configuration for Apache acting as reverse proxy to a cluster of thin
instances:

    <VirtualHost *>
      <Proxy>
        Order deny,allow
        Allow from all
      </Proxy>

      RedirectMatch ^/integrity$ /integrity/
      ProxyRequests Off
      ProxyPass /integrity/ http://localhost:8910/
      ProxyHTMLURLMap http://localhost:8910 /integrity

      <Location /integrity>
        ProxyPassReverse /
        SetOutputFilter proxy-html
        ProxyHTMLURLMap / /integrity/
        ProxyHTMLURLMap /integrity/ /integrity
      </Location>
    </VirtualHost>

If you run Integrity behind apache + thin, or Passenger, or other deployment
strategy, drop us a line at <info@integrityapp.com> and let us know what
config worked for you so we can include it here :-)

FAQ {#faq}
===

But does it work with *&lt;insert tech here&gt;*? {#other-tech}
-------------------------------------------------

Short answer: __Yeah!__

Slightly longer answer: as long as your build process can be run from an unix-y
environment __and__ it returns a *zero* status code for
success and _non-zero_ for failure, then integrity works for you.

How to use Integrity with a local repository? {#local}
---------------------------------------------

Set the project URI's to point to the `.git` directory of the
repository: `/home/sr/code/integrity/.git`

[git-sub]: http://www.kernel.org/pub/software/scm/git/docs/git-submodule.html

How do I use [git submodules][git-sub] with Integrity {#git-sub}
-----------------------------------------------------

Use this as your build command: `git submodules update --init && rake test`
It'll fetch and update the submodules everytime the project is build.

Suport / Development {#support}
====================

[#integrity]: irc://irc.freenode.net:6667/integrity
You can get in touch via IRC at [#integrity][] on freenode. If no one happens
to be around the IRC channel, you can ask in our [Google Group][ml].

If you find a bug, or want to give us a feature request, drop by our
[Lighthouse][] tracker.

If you want to check out the code, you can do so at our [GitHub project][src]

[ci]: http://en.wikipedia.org/wiki/Continuous_Integration
[notifiers]: /#notifiers
[src]: http://github.com/foca/integrity
[ml]: http://groups.google.com/group/integrityapp
[lighthouse]: http://integrity.lighthouseapp.com
[nginx]: http://nginx.net
[Thin]: http://code.macournoyer.com/thin
[demo]: http://builder.integrityapp.com
[configure]: /#configure
[configsrc]: http://github.com/foca/integrity/blob/3d1ba4b8cde7241dacd641eb40e9f26c49fbea35/config/config.sample.yml
